!function(){"use strict";function e(e,n,s,i,t,r,u,o,a,d,g){function l(e){s.getCategoryFromDeviceDB(c.id).then(function(e){c.category=e}),s.getNewslettersFromDeviceDB(c.id,0,null).then(function(e){if(!angular.isUndefined(e.newsletterSignup)&&e.newsletterSignup.length>0){var n=[],s=0;angular.forEach(e.newsletterSignup,function(e){!angular.isUndefined(c.signupIds)&&c.signupIds.length&&c.signupIds.indexOf(e.id)>-1&&(s+=1,n.push({nl:e,nlOrder:s}))}),angular.forEach(e.newsletterSignup,function(e){(angular.isUndefined(c.signupIds)||0===c.signupIds.length||c.signupIds.length&&-1===c.signupIds.indexOf(e.id))&&(s+=1,n.push({nl:e,nlOrder:s}))}),c.newsletters=n,c.showloading=!1,n.length==c.signupIds.length?c.selectAll=!1:c.selectAll=!0}})}function p(){var e=r.defer();c.signupIds=[];var n=!1;return 0==c.id?s.getMemberNewsletterCategoryIdsFromDeviceDB().then(function(s){!angular.isUndefined(s)&&s.length?(c.signupIds=[],angular.forEach(s,function(e){c.signupIdsCategory.push(e),angular.forEach(e.nlIds,function(e){c.signupIds.push(e)})}),n=!0,e.resolve(n)):e.resolve(n)}):s.getMemberNewslettersFromDeviceDB(c.id).then(function(s){!angular.isUndefined(s)&&s.length?(c.signupIds=s,n=!0,e.resolve(n)):(console.log("no data"),e.resolve(n))}),e.promise}var c=this;c.category={},c.signupIds=[],c.signupIdsCategory=[],c.newsletters=[],c.id=t.id,c.memberSignUpIds=[],c.showloading=!0,c.selectAll=!1,a.$on("$ionicView.beforeEnter",function(e,n){p().then(function(e){l(1)})}),c.setSelectedList=function(e,n){var s=c.signupIds.indexOf(e);if(s>-1?c.signupIds.splice(s,1):c.signupIds.push(e),0==c.id){var i=u("filter")(c.signupIdsCategory,{cId:n},!0);if(!angular.isUndefined(i)&&i.length){var t=c.signupIdsCategory.indexOf(i[0]),r=i[0].nlIds,o=r.indexOf(e);o>-1?r.splice(o,1):r.push(e),i[0].nlIds=r,i[0].nlIds.length<1?c.signupIdsCategory.splice(t,1):c.signupIdsCategory[t]=angular.copy(i[0])}else{var r=[];r.push(e),c.signupIdsCategory.push({cId:n,nlIds:r})}}},c.subscriptionFormsubmit=function(){c.showloading||(0==c.id?s.insertMemberNewsletterToDeviceDB(c.signupIdsCategory,!0).then(function(e){n.saveMemberSignupList(c.signupIds).then(function(e){if(!angular.isUndefined(e.isSuccessful)&&!e.isSuccessful&&e.saveToApiLog){var n={signupIds:c.signupIds,cId:0},t={memberId:0,apiCallType:"sub",dataObject:JSON.stringify(n)};s.InsertIntoApiFailedLog(t)}o.nextViewOptions({historyRoot:!0}),i.go("app.subscription",{reload:!0})})}):s.updateMemberNewsletterToDeviceDB(c.signupIds,c.id).then(function(e){n.saveMemberSignupList(c.signupIds,c.id).then(function(e){if(!angular.isUndefined(e.isSuccessful)&&!e.isSuccessful&&e.saveToApiLog){var n={signupIds:c.signupIds,cId:c.id},t={memberId:0,apiCallType:"sub",dataObject:JSON.stringify(n)};s.InsertIntoApiFailedLog(t),o.nextViewOptions({historyRoot:!0}),i.go("app.subscription",{reload:!0})}e.isSuccessful&&(o.nextViewOptions({historyRoot:!0}),i.go("app.subscription",{reload:!0}))})}))},d.registerBackButtonAction(function(){"app.subscription-category"==i.current.name?(c.showloading||(0==c.id?s.insertMemberNewsletterToDeviceDB(c.signupIdsCategory,!0).then(function(e){n.saveMemberSignupList(c.signupIds).then(function(e){if(!angular.isUndefined(e.isSuccessful)&&!e.isSuccessful&&e.saveToApiLog){var n={signupIds:c.signupIds,cId:0},i={memberId:0,apiCallType:"sub",dataObject:JSON.stringify(n)};s.InsertIntoApiFailedLog(i)}})}):s.updateMemberNewsletterToDeviceDB(c.signupIds,c.id).then(function(e){n.saveMemberSignupList(c.signupIds,c.id).then(function(e){if(!angular.isUndefined(e.isSuccessful)&&!e.isSuccessful&&e.saveToApiLog){var n={signupIds:c.signupIds,cId:c.id},i={memberId:0,apiCallType:"sub",dataObject:JSON.stringify(n)};s.InsertIntoApiFailedLog(i)}})})),o.nextViewOptions({historyRoot:!0}),navigator.app.backHistory()):"app.inbox"==i.current.name?navigator.app.exitApp():(o.nextViewOptions({historyRoot:!0}),navigator.app.backHistory())},200),c.SelectAllButton=function(){c.signupIds=[],c.signupIdsCategory=[],angular.forEach(c.newsletters,function(e){c.signupIds.push(e.nl.id)}),0==c.id&&angular.forEach(c.newsletters,function(e){var n=e.nl.id,s=e.nl.categoryId,i=u("filter")(c.signupIdsCategory,{cId:s},!0);if(!angular.isUndefined(i)&&i.length){var t=c.signupIdsCategory.indexOf(i[0]),r=i[0].nlIds,o=r.indexOf(n);0>o&&r.push(n),i[0].nlIds=r,i[0].nlIds.length<1?c.signupIdsCategory.splice(t,1):c.signupIdsCategory[t]=angular.copy(i[0])}else{var r=[];r.push(n),c.signupIdsCategory.push({cId:s,nlIds:r})}}),g(function(){c.selectAll=!1},500)},c.UnSelectAllButton=function(){c.signupIds=[],c.signupIdsCategory=[],g(function(){c.selectAll=!0},500)}}angular.module("newsletterApp").controller("subscriptioncategoryController",e),e.$inject=["authService","dataService","sqlLiteService","$state","$stateParams","$q","$filter","$ionicHistory","$scope","$ionicPlatform","$timeout"]}();